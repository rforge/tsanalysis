\documentclass[english]{article}
\begin{document}

%\VignetteIndexEntry{tsfa Guide}
\SweaveOpts{eval=TRUE,echo=TRUE,results=verbatim,fig=FALSE}
\begin{Scode}{echo=FALSE,results=hide}
 options(continue="  ")
\end{Scode}

\section{TSFA Guide}

This guide illustrates the steps for estimating a factor model using 
as an example the data and process which led to results reported in
Gilbert and Meijer (2006). 
The background theory is reported in Gilbert and Meijer (2005).

Plots and some output from the examples below are omitted to save paper.
The functions in the \emph{tsfa} package are made available with

\begin{Scode}{results=hide}
library("tsfa") 
\end{Scode}

The code from the vignette that generates this guide can 
be loaded into an editor with \emph{edit(vignette("tsfa"))}.
This uses the default editor, which can be changed using \emph{options()}.
In some examples the code runs into the margins and is truncated. (This is a
limitation of the current version of RSweave.) If in doubt about the code,
please edit the vignette as above or consult its source, which is distributed
in the file tsfa/inst/doc/tsfa.Stex. 
It should also be possible to view the pdf version of the guide for this 
package with \emph{print(vignette("tsfa"))}.

The  data is converted to real per capita data as follows
\begin{Scode}

data("CanadianMoneyData.asof.28Jan2005", package="CDNmoney")
data("CanadianCreditData.asof.28Jan2005", package="CDNmoney")

cpi <- 100 * M1total / M1real
seriesNames(cpi) <- "CPI"
popm <- M1total / M1PerCapita
seriesNames(popm) <- "Population of Canada"

z <- tframed(tbind(
    MB2001,
    MB486 + MB452 + MB453 ,
    NonbankCheq,
    MB472 + MB473 + MB487p,
    MB475,
    NonbankNonCheq + MB454 + NonbankTerm + MB2046 + MB2047 + MB2048 +
    MB2057 + MB2058 + MB482),
    names=c("currency", "personal cheq.", "NonbankCheq",
    "N-P demand & notice", "N-P term", "Investment" )
  )


TotalMoney <- tframed(rowSums(z), tframe(z))

z <- tbind (z, ConsumerCredit, ResidentialMortgage,
    ShortTermBusinessCredit, OtherBusinessCredit)
\end{Scode}
Investment series goes back only to November 1981 and some of the data ends in
November 2004, so the data is truncated to that time window.

\begin{Scode}
z <-tfwindow(z, start=c(1981,11), end=c(2004,11))

scale <- tfwindow(1e8 /(popm * cpi), tf=tframe(z))

MBandCredit <- sweep(z, 1, scale, "*")
\end{Scode}
Multiplying by $1e8$  gives real dollars per person.
(Credit aggregates, B and MB numbers are in millions,
CPI is in percentage points, popm is in units.) 
Plots to check the data can be generated with

\begin{Scode}{fig=TRUE}
tfplot(MBandCredit, graphs.per.page=3)
\end{Scode}

\begin{Scode}{fig=TRUE}
tfplot(diff(MBandCredit), graphs.per.page=3)
\end{Scode}

Various sample statistics are checked with

\begin{Scode}
start(MBandCredit)
end(MBandCredit)
Tobs(MBandCredit)
DX <- diff(MBandCredit, lag=1)
\end{Scode}
The number of observations is
\begin{Scode}
Tobs(MBandCredit)
\end{Scode}
The number of series is
\begin{Scode}
nseries(MBandCredit)
\end{Scode}
The means of differenced series are
\begin{Scode}
colMeans(DX)
\end{Scode}
The standard deviations of differenced series are
\begin{Scode}
sqrt(diag(cov(DX)))
\end{Scode}

\section{Checking for the number of factors}

Eigenvalues for the scree plot are

\begin{Scode}
zz <- eigen(cor(diff(MBandCredit, lag=1)), symmetric=TRUE)[["values"]]
print(zz)
\end{Scode}
The scree plot (Figure 1) is generated by 
\begin{Scode}{fig=TRUE}
par(omi=c(0.1,0.1,0.1,0.1),mar=c(4.1,4.1,0.6,0.1))
plot(zz, ylab="Value", xlab="Eigenvalue Number", pch=20:20,cex=1,type="o")
\end{Scode}

\emph{FAfitStats} is used to calculate the fit statististics for 
different numbers of factors (Table 1).

\begin{Scode}
z <- FAfitStats(MBandCredit)    
print(z, digits=3)
c2withML <- estTSF.ML(MBandCredit, 2)
\end{Scode}

The sign and order of factors is arbitary. For simulation and estimation
comparisons it is useful 
to put them in the same order when different results are compared. 
This is done by specifying the \emph{BpermuteTarget} argument in
\emph{estTSF.ML}. Other than the sign, this does not affect the estimated 
values, it only rearranges their order. Here they are 
arranged so 1=transactions, 2=long term, 3=potential spending, 
4=consumer credit , 5=N-P term
(which is the order they appear as factors are added).
The \emph{BpermuteTarget, z} below was determined by an initial run.

\begin{Scode}
z <- matrix(0,10,3)
z[matrix(c( 1,6,2,1:3),3,2)] <- c(10, 56, 41)
c3withML <- estTSF.ML(MBandCredit, 3, BpermuteTarget=z)

z <- matrix(0,10,4)
z[matrix(c( 1,6,2,7,1:4),4,2)] <- c(13, 54, 37, 24)
c4withML  <- estTSF.ML(MBandCredit, 4, BpermuteTarget=z)

z <- matrix(0,10,5)
z[matrix(c( 1,6,2,7,5,1:5),5,2)] <- c(13, 67, 34, 30, 72)
c5withML <- estTSF.ML(MBandCredit, 5, BpermuteTarget=z)
\end{Scode}

The standardized loadings for the four factor model (Table 2) are

\begin{Scode}
print(DstandardizedLoadings(c4withML) )
\end{Scode}
The estimated $ \Phi $ matrix is

\begin{Scode}
print(c4withML$Phi, digits=3)
\end{Scode}

Communalities for the 4 factor model are

\begin{Scode}
print(1 - c4withML$stats$uniquenesses)
\end{Scode}
Communalities for other models are given by the following, but output is
omitted here.

\begin{Scode}{results=hide}
print(1 - c2withML$stats$uniquenesses)
print(1 - c3withML$stats$uniquenesses)
print(1 - c5withML$stats$uniquenesses)
\end{Scode}

Loadings for 4 factor model (Table 3) are

\begin{Scode}
print(loadings(c4withML) )
\end{Scode}

Figure 2 is generated by

\begin{Scode}{fig=TRUE}
tfplot(ytoypc(factors(c4withML)),
       Title= "Factors from 4 factor model (year-to-year growth rate)",
       lty=c("solid"),
       col=c("black"),
       xlab=c(""),ylab=c("factor 1","factor 2","factor 3","factor 4"),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Figure 3 is generated by

\begin{Scode}{fig=TRUE}
tfplot(factors(c4withML),
       Title="Factors from 4 factor model",
       lty=c("solid"),
       col=c("black"),
       xlab=c(""),ylab=c("factor 1","factor 2","factor 3","factor 4"),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Some points are close to zero and cause problems in growth rate graphics.
One solution is to set them to NA, but truncating the graphic works better.
Figure 4 is generated by

\begin{Scode}{fig=TRUE}

z <- explained(c4withML)

tfplot(ytoypc(MBandCredit), ytoypc(z), series=1:5, graphs.per.page=5,
       lty=c("solid", "dashed"), 
       col=c("black", "red"),
       ylab=c("currency", "personal cheq.", "NonbankCheq",
              "N-P demand & notice", "N-P term"),
       ylim=list(NULL,NULL,c(-100,100),NULL,NULL),
       Title=
         "Explained money indicator 1-5 (year-to-year growth rate) using 4 factors",
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Figure 5 is generated by

\begin{Scode}{fig=TRUE}
tfplot(ytoypc(MBandCredit), ytoypc(explained(c4withML)), series=6:10,
       graphs.per.page=5,
       lty=c("solid", "dashed"), 
       col=c("black", "red"),
       ylab=c("","","","","",
              "Investment","Consumer Credit", "Residential Mortgage",
              "Short Term Business Credit", "Other Business Credit"),
       Title=
         "Explained money indicator 6-10 (year-to-year growth rate)using 4 factors",
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Figure 6 is generated by

\begin{Scode}{fig=TRUE}

tfplot(  MBandCredit,  explained(c4withML),  series=1:5, graphs.per.page=5,
        lty=c("solid", "dashed"), 
        col=c("black", "red"),
        Title= "Explained money indicators 1-5 using 4 factors",
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Figure 7 is generated by

\begin{Scode}{fig=TRUE}
tfplot(  MBandCredit,  explained(c4withML),  series=6:10, graphs.per.page=5,
        lty=c("solid", "dashed"), 
       col=c("black", "red"),
        Title= "Explained money indicator 6-10 using 4 factors",
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}
The differenced version of the above is not in the paper, but is given by
\begin{Scode}{fig=TRUE}
tfplot(  diff(MBandCredit), diff(explained(c4withML)),   graphs.per.page=3)
\end{Scode}
Summary information about the model is calculated with
\begin{Scode}{results=hide}
summary(MBandCredit)
\end{Scode}

\section{Two, three and five factors models}

Tables of standardized loadings for differenced models, and the 
estimated $ \Phi $ are given by the following (output is omitted).

\begin{Scode}{results=hide}
DstandardizedLoadings(c2withML)
print(c2withML$Phi, digits=3)

DstandardizedLoadings(c3withML)
print(c3withML$Phi, digits=3)

print(DstandardizedLoadings(c5withML), digits=3)
print(c5withML$Phi, digits=3)

DstandardizedLoadings(c4withML)
print(c2withML$Phi, digits=3)
\end{Scode}

Figure 8  part 1 is generated by
\begin{Scode}
tfplot(ytoypc(factors(c4withML)), ytoypc(factors(c2withML)),
       ytoypc(factors(c3withML)),
       ytoypc(factors(c5withML)), series=1:2,
       xlab=c(""),ylab=c("factor 1","factor 2"),
       lty=c("solid", "dotdash", "dashed", "dotted"),
       col=c("black","green","red","blue"),
       Title= paste("Factors transaction and long ",
        "(year-to-year growth rate) using 2, 3, 4 and 5 factor models", sep=""),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}
Figure 8 part 2 is generated by

\begin{Scode}
tfplot(ytoypc(factors(c4withML)),
       ytoypc(factors(c3withML)),
       ytoypc(factors(c5withML)), series=3,
       lty=c("solid", "dashed", "dotted"),
       xlab=c(""),ylab=c("","","factor 3"),
       col=c("black","red","blue"),
       Title= paste("Factor near ",
        "(year-to-year growth rate) using 3, 4 and 5 factor models", sep=""),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

\section{Rotation method sensitivity}

\emph{BpermuteTarget} just helps put the factors in the same order, and with the
same signs as \emph{c4withML}. It does not otherwise affect the estimation or 
rotation. The oblimin rotation with $\gamma = 0.5$ is given by

\begin{Scode}
c4withMLg0.5 <- estTSF.ML(MBandCredit, 4, BpermuteTarget=loadings(c4withML),
     rotation="oblimin", rotationArgs=list(gam=0.5))
loadings(c4withMLg0.5)
DstandardizedLoadings(c4withMLg0.5)
DstandardizedLoadings(c4withMLg0.5) - DstandardizedLoadings(c4withML)
\end{Scode}
Summary information is produced with (output omitted)
\begin{Scode}{results=hide}
summary(c4withMLg0.5)
\end{Scode}

Other rotation results are produced by the following, but outputs are omitted.

\begin{Scode}{results=hide}
c4withMLgneg0.5 <- estTSF.ML(MBandCredit, 4, BpermuteTarget=loadings(c4withML),
     rotation="oblimin", rotationArgs=list(gam=-0.5))
loadings(c4withMLgneg0.5)
DstandardizedLoadings(c4withMLgneg0.5)
DstandardizedLoadings(c4withMLgneg0.5) - DstandardizedLoadings(c4withML)
summary(c4withMLgneg0.5)

c4withMLgneg1.0 <- estTSF.ML(MBandCredit, 4, BpermuteTarget=loadings(c4withML),
     rotation="oblimin", rotationArgs=list(gam=-1.0))
loadings(c4withMLgneg1.0)
DstandardizedLoadings(c4withMLgneg1.0)
DstandardizedLoadings(c4withMLgneg1.0) - DstandardizedLoadings(c4withML)
summary(c4withMLgneg1.0)

c4withMLbQ <- estTSF.ML(MBandCredit, 4, rotation="bentlerQ",
     BpermuteTarget=loadings(c4withML))
loadings(c4withMLbQ)
DstandardizedLoadings(c4withMLbQ)
DstandardizedLoadings(c4withMLbQ) - DstandardizedLoadings(c4withML)
summary(c4withMLbQ)
\end{Scode}

Figure 9 is generated by

\begin{Scode}
tfplot(ytoypc(factors(c4withML)), ytoypc(factors(c4withMLg0.5)),
       ytoypc(factors(c4withMLgneg0.5)), ytoypc(factors(c4withMLgneg1.0)),
       ytoypc(factors(c4withMLbQ)),
       xlab=c(""),ylab=c("factor 1","factor 2","factor 3","factor 4"),
       lty=c("solid", "dashed", "dotted", "dotdash", "longdash"),
       col=c("black","red","blue","green","pink"),
       Title= paste(
         "Factors from various 4 factor models (year-to-year growth rate)",
         "\n and oblimin with gam=0 (solid)"),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Geomin factors 2 and 3 each have one modestly different loading.
Factor 2 has personal chequing mixed in with investment and credit.
Factor 3 explains on currency, personal chequing, and investment,
so the separation is not so interesting. Output is omitted from these.

\begin{Scode}{results=hide}
c4withMLgm <- estTSF.ML(MBandCredit, 4, rotation="geominQ",
     BpermuteTarget=loadings(c4withML))
loadings(c4withMLgm)
DstandardizedLoadings(c4withMLgm)
\end{Scode}
The difference between the estimates can be checked with (output omitted)
\begin{Scode}{results=hide}
DstandardizedLoadings(c4withMLgm) - DstandardizedLoadings(c4withML)
\end{Scode}
The summary of the 4 factor geomin estimate is given by
\begin{Scode}{results=hide}
summary(c4withMLgm)
\end{Scode}

Figure 10 is generated by
\begin{Scode}
tfplot(ytoypc(factors(c4withML)), ytoypc(factors(c4withMLgm)),
       xlab=c(""),ylab=c("factor 1","factor 2","factor 3","factor 4"),
       lty=c("solid", "dashed"),
       col=c("black","red"),
       Title= paste(
     "Factors from geomin (dashed) 4 factor model (year-to-year growth rate)",
     "\n and oblimin with gam=0 (solid)"),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)

c4withMLnotNorm  <- estTSF.ML(MBandCredit, 4, normalize=FALSE,
       BpermuteTarget=loadings(c4withML))

\end{Scode}

There is only a qualitative statement about the next in the paper (outputs
omitted).
\begin{Scode}{results=hide}
DstandardizedLoadings(c4withML)
DstandardizedLoadings(c4withMLnotNorm)
DstandardizedLoadings(c4withML) - DstandardizedLoadings(c4withMLnotNorm)
\end{Scode}


\section{Sensitivity to sample period}

\emph{BpermuteTarget=loadings(c4withML)} is not good enough in some cases.
There are difficulties interpreting factors 2 and 3 in here.

\begin{Scode}
z <- matrix(0,10,4)
z[matrix(c( 1,6,2,7,1:4),4,2)] <- c(11, 104, 20, 13)
c4withMLbefore90 <- estTSF.ML(tfwindow(MBandCredit, end=c(1989,12)), 4,
         BpermuteTarget=z)

c4withMLafter95 <- estTSF.ML(tfwindow(MBandCredit, start=c(1995,1)), 4,
         BpermuteTarget=loadings(c4withML))

z <- matrix(0,10,4)
z[matrix(c( 1,6,2,7,1:4),4,2)] <- c(11, 104, 20, 13)
c4withMLbefore95 <- estTSF.ML(tfwindow(MBandCredit, end=c(1994,12)), 4,
         BpermuteTarget=z)

c4withMLafter00 <- estTSF.ML(tfwindow(MBandCredit, start=c(2000,1)), 4,
         BpermuteTarget=loadings(c4withML))

c4withML90to00 <- estTSF.ML(tfwindow(MBandCredit, start=c(1990,1), end=c(2000,1)), 4,
         BpermuteTarget=loadings(c4withML))
\end{Scode}

Figure 11 is generated by

\begin{Scode}
tfplot(ytoypc(factors(c4withML)),         ytoypc(factors(c4withMLbefore90)),
       ytoypc(factors(c4withMLbefore95)), ytoypc(factors(c4withMLafter95)),
       ytoypc(factors(c4withMLafter00)),  ytoypc(factors(c4withML90to00)),
       xlab=c(""),ylab=c("factor 1","factor 2","factor 3","factor 4"),
       ylim=list(NULL,c(-20,20),c(-25,40),NULL),
       graphs.per.page=4,
       lty=c("dashed", "dotted", "dotdash", "longdash", "dotted",
             "twodash"),
       col=c("red","blue","green","pink","violet","brown"),
       Title= paste(
           "Factors (year to year growth) using full sample and sub-samples\n",
           "ML estimation with quartimin rotation objective", sep=""),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}

Figure 12 is generated by

\begin{Scode}
tfplot(ytoypc(MBandCredit),                ytoypc(explained(c4withML)),
       ytoypc(explained(c4withMLbefore90)), ytoypc(explained(c4withMLbefore95)),
       ytoypc(explained(c4withMLafter95)),  ytoypc(explained(c4withMLafter00)),
       ytoypc(explained(c4withML90to00)), series=1:5, graphs.per.page=5,
       ylab=c("currency", "personal cheq.", "NonbankCheq",
              "N-P demand & notice", "N-P term"),
       ylim=list(NULL,NULL,c(-70,70),NULL,c(-70,70)),
       lty=c("solid", "dashed", "dotted", "dotdash", "longdash", "dotted",
             "twodash"),
       col=c("black", "red","blue","green","pink","violet","brown"),
       Title= paste("Explained money indicators 1-5 (year to year growth)\n",
               "using 4 factors, full sample and sub-samples", sep=""),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}


Figure 13 is generated by

\begin{Scode}
tfplot(ytoypc(MBandCredit), ytoypc(explained(c4withML)),
       ytoypc(explained(c4withMLbefore90)), ytoypc(explained(c4withMLbefore95)),
       ytoypc(explained(c4withMLafter95)),  ytoypc(explained(c4withMLafter00)),
       ytoypc(explained(c4withML90to00)), series=6:10, graphs.per.page=5,
       ylab=c("","","","","",
              "Investment","Consumer Credit", "Residential Mortgage",
              "Short Term Business Credit", "Other Business Credit"),
       lty=c("solid", "dashed", "dotted", "dotdash", "longdash", "dotted",
             "twodash"),
       col=c("black", "red","blue","green","pink","violet","brown"),
       Title= paste("Explained money indicators 6-10 (year to year growth)\n",
               "using 4 factors, full sample and sub-samples", sep=""),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}


\section{Comparison with Aggregates}


Compute aggregates M1+ and M2++

\begin{Scode}
M1   <-  tfwindow(M1total, start=c(1981,11), end=c(2004,11)) * scale
seriesNames(M1) <- "Real per Capita M1"

z <-  tframed(MB2001 + MB486 + MB487p + MB452 + MB452adj + MB472 + NonbankCheq)

M1p   <-  tfwindow(z, start=c(1981,11), end=c(2004,11)) * scale
seriesNames(M1p) <- "Real per Capita M1+"

M2pp <-  tfwindow(M1total
                 + MB472 + MB473 + MB452 + MB453 + MB454
                 + NonbankCheq + NonbankNonCheq + NonbankTerm +
                 + MB2046 + MB2047 + MB2048
                 + MB2057 + MB2058, start=c(1981,11), end=c(2004,11))* scale

seriesNames(M2pp) <- "Real per Capita M2++"
\end{Scode}
and put factors on the same scale.

\begin{Scode}
f <- tframed(factors(c4withML)[,1:2], tf=tframe(factors(c4withML)))
mnF <- colMeans(f)
mnM <- colMeans(cbind(M1p, M2pp))
f <- sweep(f, 2, mnM/mnF, "*")
\end{Scode}

Now compare the transaction factor with M1+ and the long term factor with M2++.
Figure 14 is generated by

\begin{Scode}
tfplot(ytoypc(f), ytoypc(cbind(M1, M2pp)), graphs.per.page=2,
       lty=c("dashed", "solid"),
       col=c("red","black"),
       Title=
   paste("(year to year growth) M1+ and M2++ (solid) and scaled Bartlett Predictors\n",
           "computed using ordinary ML parameters (dashed)", sep=""),
       ylab=c("M1+ vs. factor 1", "M2++ vs. factor 2" ),
       par=list(omi=c(0.1,0.1,0.1,0.1),mar=c(3.1,4.1,0.6,0.1)),
       reset.screen=TRUE)
\end{Scode}


\section{References}
  Paul D. Gilbert and Erik Meijer, (2006) "Money and Credit Factors",
  Bank of Canada  Working Paper 2006-3, Available at
  \verb <http://www.bank-banque-canada.ca/en/res/wp/wp(y)_2006.html> .

  
  Paul D. Gilbert and Erik Meijer, (2005) 
  "Time Series Factor Analysis with an Application to Measuring Money",
  Research Report 05F10, University of Groningen, SOM Research School.
  Available at 
  
  \verb <http://som.eldoc.ub.rug.nl/reports/themeF/2005/05F10/> .

\end{document}
