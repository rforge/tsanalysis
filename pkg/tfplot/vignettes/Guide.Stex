\documentclass[english]{article}
\newcommand{\code}{\emph}
\newcommand{\pkg}{\textsl}
\title{Time Series tfplot Package}

\begin{document}
\maketitle
%\VignetteIndexEntry{tfplot Guide}
\SweaveOpts{eval=TRUE,echo=TRUE,results=hide,fig=FALSE}
\begin{Scode}{echo=FALSE,results=hide}
 options(continue="  ")
\end{Scode}


The functions in this package are made available with

\begin{Scode}
library("tfplot")  
\end{Scode}

The code from the vignette that generates this guide can 
be loaded into an editor with \code{edit(vignette("tfplot"))}.
This uses the default editor, which can be changed using \code{options()}.
It should be possible to view the pdf version of this 
package guide with \code{print(vignette("tfplot"))}.

The functions in this package rely on the \pkg{tframe} package. While that
package contains underlying programing support, the functions in this package
are meant to be called directly by users. They include
\code{tfplot}, \code{tfOnePlot}, \code{tfVisPlot}, \code{diffLog}, 
\code{percentChange}, \code{trimNA} and \code{tsScan}. 
Below are some simple examples using generated data, but see the Guide 
vignettes for packages \pkg{TSgetSymbol}, \pkg{TShistQuote}, 
\pkg{TSxls}, \pkg{TSzip} for example with real data take from the
web. Also see the help for more details. 

For illustration, two univariate and two multivariate series can be generated
with:

\begin{Scode}
 z  <- ts(apply(matrix(rnorm(200), 100,1),2, cumsum), 
           start=c(1990, 1), frequency=12) 
 x  <- ts(apply(matrix(rnorm(200), 100,1),2, cumsum), 
           start=c(1990, 1), frequency=12) 
 zz <- ts(apply(matrix(rnorm(600), 100,3),2, cumsum), 
           start=c(1990, 1), frequency=4) 
 xx <- ts(apply(matrix(rnorm(600), 100,3),2, cumsum), 
           start=c(1990, 1), frequency=4) 
\end{Scode}

The simplest use produces a graph panel for each series:
\begin{Scode}{fig=TRUE}
  tfplot(z)
\end{Scode}
\begin{Scode}{fig=TRUE,width=8,height=12}
  tfplot(zz)
\end{Scode}

Multiple panels, as in the last graph are especial convenient when the series
have different magnitudes, so showing them on the same graph does not work.

Font sizes can be controlled. Defaults are used here for simplicity, although
the defaults generally work better on screen output than they do in vignettes.

If series are provided in multiple arguments then each mulivariate series 
argument should have the
same number of series, and panels with the corresponding series from each
argument are produced:
\begin{Scode}{fig=TRUE}
  tfplot(z, x)
\end{Scode}
\begin{Scode}{fig=TRUE}
  tfplot(zz, xx)
\end{Scode}

In the case of multivariate series putting all series onto the same panel 
can be done:
\begin{Scode}{fig=TRUE}
  par(mfcol=c(1,1))
  tfOnePlot(zz)
\end{Scode}
\begin{Scode}{fig=TRUE}
  tfOnePlot(tbind(z, x))
\end{Scode}

In the above \code{par(mfcol=c(1,1))} sets the graphic device to contain one
panel. Often this is not necessary, but ocassionally the device is left in a
different state by a previous command. Also, sometimes it is interesting to 
set it differently on purpose, for example,

\begin{Scode}{fig=TRUE,eval=FALSE}
  par(mfcol=c(2,2))
\end{Scode}
could be used to put four graphs in two rows and two columns on a page.
\begin{Scode}{fig=TRUE}
  tfOnePlot(xx)
  par(mfcol=c(1,1))
\end{Scode}

The above general rules apply in most cases, so the examples below will not 
be shown for all the above cases.

If the series have names then these will be used. (If the series are extracted
from a database then the names may automatically be available):

\begin{Scode}{fig=TRUE}
  seriesNames(zz) <- c("Random I","Random II","Random III")
  tfplot(zz, Title="Randomly Generated Series", 
     start=c(2005,1), end=c(2012,4), lastObs=TRUE,
     source="Source: simulated data")
\end{Scode}
\begin{Scode}{fig=TRUE}
  par(mfcol=c(1,1))
  tfOnePlot(zz, Title="Randomly Generated Series", subtitle="(cummulated)",
      legend=c("Random I", "Random II", "Random III"))
\end{Scode}

\begin{Scode}{fig=TRUE}
  tfOnePlot(percentChange(zz), Title="Randomly Generated Series", 
      subtitle="(cummulated)",
      lty=c("solid", "dashed", "solid"), col=c("pink", "blue", "yellow"),
      legend=c("Random I", "Random II", "Random III"),
      ylab="Percent Change", xlab="Quarterly Series",
      ylim=c(-200, 300),
      source="Source: simulated data", 
      footnote="Left Note", footnoteRight ="Right Note")
\end{Scode}

See ?par for additional information on setting \code{lty} and \code{col}.

Panels for different series can be especial useful for comparing different
transformations of the same series, for example year-to-year growth compared
with annualized period-to-period growth:
\begin{Scode}{fig=TRUE}
  tfplot(ytoypc(zz), annualizedGrowth(zz), 
      Title="Randomly Generated Series", 
      subtitle=c("Random I","Random II","Random III"),
      lty=c("solid", "solid"), 
      ylab=c("Annual Growth", "Annual Growth", "Annual Growth"), 
      xlab="year-to-year growth (black); annualized quarterly growth (red)",
      ylim=c(-200, 300),
      source="Source: simulated data")
\end{Scode}

or the difference of logrithms approximation to growth rates, often used by
economists:
\begin{Scode}{fig=TRUE}
  tfplot(ytoypc(100+zz), annualizedGrowth(100+zz), 
      100 * diffLog(100+zz, lag=4), 400 * diffLog(100+zz, lag=1),
      Title="Difference of Log Approximates *Small* Growth Rates", 
      subtitle=c("100 + Random I","100 + Random II","100 + Random III"),
      lty=c("solid", "solid", "dashed", "dashed"),
      col=c("black", "red",   "green",  "blue"),
      ylab=c("Annual Growth", "Annual Growth", "Annual Growth"), 
      xlab="year-to-year growth (solid black); annualized quarterly growth (solid red); \
 100 * diff lag 4 of log (dashed green); 400 * diff lag 1 of log (dashed blue)")
\end{Scode}

The function \code{tfVisPlot} can be used to generate plots in a browser, with
the added functionality that your mouse can point at the graph and find
additional information like the date of a point, or the series in a
multi-series graph. This can be very useful when looking for outliers and
other anomolies in the data. See ?tfVisPlot for more details.

\end{document}

