\documentclass[english]{article}
\newcommand{\code}{\emph}
\newcommand{\pkg}{\textsl}
\title{Time Series tfplot Package}

\begin{document}
\maketitle
%\VignetteIndexEntry{tfplot Guide}
\SweaveOpts{eval=TRUE,echo=TRUE,results=hide,fig=FALSE}
\begin{Scode}{echo=FALSE,results=hide}
 options(continue="  ")
\end{Scode}


The functions in this package are made available with

\begin{Scode}
library("tfplot")  
\end{Scode}

The code from the vignette that generates this guide can 
be loaded into an editor with \code{edit(vignette("Guide", package="tfplot"))}.
This uses the default editor, which can be changed using \code{options()}.

The functions in this package rely on the \pkg{tframe} package. While that
package contains underlying programing support, and some functions that might
occasionally be called by users, the functions in this package
are meant primarily to be called by users. They include
\code{tfplot}, \code{tfOnePlot}, \code{tfVisPlot}, \code{diffLog}, 
\code{percentChange}, \code{ytoypc}, \code{annualizedGrowth}, \code{trimNA},
\code{tsWrite}, and \code{tsScan}. 

The intention of these function is to have defaults which generally work
fairly well for producing graphs often and on an ad hoc basis. That
may include much of what is done in preliminary research. Producing graphs for
publication will require more work. In many cases that can be accomplished
by specifying arguments to the functions, as examples here will illustrate. 
However, not all special effects can
be accomplished with these tools. The emphasis is more on simplicity than
total flexibility.

Below are some simple examples using generated data, but see the Guide 
vignettes for packages \pkg{TSgetSymbol}, \pkg{TShistQuote}, 
\pkg{TSxls}, \pkg{TSzip} for example with real data taken from the
web. Also see the help for specific functions to get more details. 

For illustration, two univariate and two multivariate series can be generated
with:

\begin{Scode}
 z  <- ts(cumsum(rnorm(200)), start=c(1990, 1), frequency=12) 
 x  <- ts(cumsum(rnorm(200)), start=c(1990, 1), frequency=12) 
 zz <- ts(apply(matrix(rnorm(600), 100,3),2, cumsum), 
           start=c(1990, 1), frequency=4) 
 xx <- ts(apply(matrix(rnorm(600), 100,3),2, cumsum), 
           start=c(1990, 1), frequency=4) 
\end{Scode}

\pagebreak
The simplest use produces a graph:
\begin{Scode}{fig=TRUE}
  tfplot(z)
\end{Scode}

\pagebreak
or a panel for each series in the multivariate case:
\begin{Scode}{fig=TRUE,width=8,height=12}
  tfplot(zz)
\end{Scode}

Multiple panels, as in the last graph are especial convenient when the series
have different magnitudes, so showing them on the same graph does not work.

Font sizes can be controlled. Defaults are used here for simplicity, although
the defaults generally work better on screen output than they do in vignettes.

\pagebreak
If series are provided in multiple arguments then a single graph with the  
series from each argument are produced:
\begin{Scode}{fig=TRUE}
  tfplot(z, x)
\end{Scode}

These graphs show only two time series objects, but more can be supplied as
additional arguments.

\pagebreak
Each multivariate series argument should have the
same number of series, and panels with the corresponding series from each
argument are produced:
\begin{Scode}{fig=TRUE}
  tfplot(zz, xx)
\end{Scode}

\pagebreak
In the case of multivariate series, putting all series onto the same panel 
can be done with \code{tfOnePlot}:
\begin{Scode}{fig=TRUE}
  par(mfcol=c(1,1))
  tfOnePlot(zz)
\end{Scode}
\pagebreak
\begin{Scode}{fig=TRUE}
  tfOnePlot(tbind(z, x))
\end{Scode}

In the above \code{par(mfcol=c(1,1))} sets the graphic device to contain one
panel. Often this is not necessary, but ocassionally the device is left in a
different state by a previous command. Also, sometimes it is interesting to 
set it differently on purpose, for example, \code{par(mfcol=c(2,2))}
could be used to put four graphs in two rows and two columns on a page.

\pagebreak
The above general rules apply in most cases, so the examples below will not 
be shown for all the above cases.

If the series have names then these will be used. (If the series are extracted
from a database then the names may automatically be available):

\begin{Scode}{fig=TRUE}
  seriesNames(zz) <- c("Random I","Random II","Random III")
  tfplot(zz, Title="Randomly Generated Series", 
     start=c(2005,1), end=c(2012,4), lastObs=TRUE,
     source="Source: simulated data")
\end{Scode}
\pagebreak
\begin{Scode}{fig=TRUE}
  par(mfcol=c(1,1))
  tfOnePlot(zz, Title="Randomly Generated Series", subtitle="(cummulated)",
      legend=c("Random I", "Random II", "Random III"))
\end{Scode}

\pagebreak
\begin{Scode}{fig=TRUE}
  tfOnePlot(percentChange(zz), Title="Randomly Generated Series", 
      subtitle="(cummulated)",
      lty=c("solid", "dashed", "solid"), col=c("pink", "blue", "yellow"),
      legend=c("Random I", "Random II", "Random III"),
      ylab="Percent Change", xlab="Quarterly Series",
      ylim=c(-200, 300),
      source="Source: simulated data", 
      footnote="Left Note", footnoteRight ="Right Note")
\end{Scode}

See ?par for additional information on setting \code{lty} and \code{col}.

\pagebreak
Panels for different series can be especial useful for comparing different
transformations of the same series, for example year-to-year growth compared
with annualized period-to-period growth:
\begin{Scode}{fig=TRUE}
  tfplot(ytoypc(zz), annualizedGrowth(zz), 
      Title="Randomly Generated Series", 
      subtitle=c("Random I","Random II","Random III"),
      lty=c("solid", "solid"), 
      ylab=c("Annual Growth", "Annual Growth", "Annual Growth"), 
      xlab="year-to-year growth (black); annualized quarterly growth (red)",
      ylim=c(-200, 300),
      source="Source: simulated data")
\end{Scode}

\pagebreak
or the difference of logrithms approximation to growth rates, often used by
economists:
\begin{Scode}{fig=TRUE}
  tfplot(ytoypc(100+zz), annualizedGrowth(100+zz), 
      100 * diffLog(100+zz, lag=4), 400 * diffLog(100+zz, lag=1),
      Title="Difference of Log Approximates *Small* Growth Rates", 
      subtitle=c("100 + Random I","100 + Random II","100 + Random III"),
      lty=c("solid", "solid", "dashed", "dashed"),
      col=c("black", "red",   "green",  "blue"),
      ylab=c("Annual Growth", "Annual Growth", "Annual Growth"), 
      xlab="year-to-year growth (solid black); annualized quarterly growth (solid red); \
 100 * diff lag 4 of log (dashed green); 400 * diff lag 1 of log (dashed blue)")
\end{Scode}

\pagebreak
The function \code{tfplot} calls \code{tfOnePlot} for each panel. It, in turn,
uses function  \code{plot} from the \code{graphics} package. \code{plot}
automatically determines tick marks and labelling of the x-axis. 
\begin{Scode}{fig=TRUE}
  tfplot(zz, xx, start=c(2014,1))
\end{Scode}

This will also be influenced by the type of time series object. 
For example, \code{zoo} objects may result in different (generally better) 
labeling than \code{ts} objects, possibly indicating quarters or months rather
than fractions of a year.  In general, the handling of axis labelling is an
area that could use improvement (contributions welcomed).

The function \code{tfVisPlot} can be used to generate plots in a browser, with
the added functionality that your mouse can point at the graph and find
additional information like the date of a point, or the series in a
multi-series graph. This can be very useful when looking for outliers and
other anomolies in the data. See ?tfVisPlot for more details.

\pagebreak
Often one needs to deal with time series that have slightly different time
frames, that is, start or end at different dates. Also, series are sometimes
padded with \code{NA} on the ends, for a variety of reasons, effectively
changing the start and end date of the object from that of the actually
available data. Below are examples of some ways to deal with this.


\begin{Scode}
  z  <- ts(cumsum(rnorm(200)), start=c(1990, 1), frequency=12) 
  x  <- ts(c(rep(NA,105),cumsum(rnorm(100)),rep(NA,10)),
                             start=c(1995, 1), frequency=12) 

  seriesNames(z) <- "z"
  seriesNames(x) <- "x"
 
  start(z)
  end(z)
  Tobs(z)
  tframe(z)

  start(x)
  end(x)
  Tobs(x)
  tframe(x)

  start(trimNA(x))
  end(trimNA(x))
  Tobs(trimNA(x))
  tframe(trimNA(x))
\end{Scode}

The \code{tfplot} default is to plot for the whole length of the object.
\begin{Scode}{fig=TRUE}
  tfplot(z)
\end{Scode}

\pagebreak
For objects with \code{NAs} this means that some parts of the graph are blank.
\begin{Scode}{fig=TRUE}
  tfplot(x)
\end{Scode}

\pagebreak
When there is more than one object, the combined time frame is used (spliced
in time): 
\begin{Scode}{fig=TRUE}
  tfplot(x,z)
\end{Scode}

\pagebreak
But specific dates can also be provided:
\begin{Scode}{fig=TRUE}
  tfplot(x,z, start=c(2000,1))
\end{Scode}

\pagebreak
\begin{Scode}{fig=TRUE}
  tfplot(tbind(x,z))
\end{Scode}

\pagebreak
The function \code{trimNA} can be used to trim \code{NAs} from the ends of a
series:
\begin{Scode}{fig=TRUE}
  tfplot(trimNA(tbind(x,z)))
\end{Scode}

For a multivariate timeseries object it trims time periods for which any
observation is \code{NA}. Options allow triming only the start or end of the
object.

\pagebreak
The time frame can also be specified using the time frame from one of  the
objects,
\begin{Scode}{fig=TRUE}
  tfplot(tbind(x,z), tf=tframe(x))
\end{Scode}

\pagebreak
Or, using the time frame of the object with \code{NAs} removed:
\begin{Scode}{fig=TRUE}
  tfplot(tbind(x,z), tf=tframe(trimNA(x)))
\end{Scode}

As mentioned above, the guides for several of the \code{TSdbi} packages have
additional examples. In particular, see the guide for \pkg{TShistQuote}
for examples with higher frequency data and \code{zoo} objects.

\end{document}

